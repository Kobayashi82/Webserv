##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /mnt/c/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.php index.htm index.nginx-debian.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass PHP scripts to FastCGI server
	#
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
		fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}

# -------------------------------------------------------------------------------------

#	En la sección global del bloque `http` de Nginx, puedes especificar una variedad de configuraciones que se aplicarán a todos los servidores
#	definidos dentro de ese bloque. Aquí hay algunas configuraciones comunes que puedes incluir:

### Ejemplo de Configuración Global

http {
    # Páginas de error globales
    error_page 404 /error_pages/404.html;
    error_page 500 502 503 504 /error_pages/50x.html;

    # Configuración de logs
    access_log /path/to/mi_programa/logs/access.log;
    error_log /path/to/mi_programa/logs/error.log;

    # Configuración de compresión
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Configuración de tiempo de espera
    client_max_body_size 10M;
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;

    # Configuración de caché
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

    # Configuración de MIME types
    include /path/to/mi_programa/conf/mime.types;
    default_type application/octet-stream;

    # Configuración de conexiones
    keepalive_requests 100;
    tcp_nodelay on;
    tcp_nopush on;

    # Configuración de seguridad
    server_tokens off;

    # Configuración de límites de conexiones
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn addr 100;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        root /path/to/mi_programa/www/html;
        index index.html index.php index.htm;

        server_name _;

        location / {
            try_files $uri $uri/ =404;
        }

        location ~ \.php$ {
            include /path/to/mi_programa/conf/fastcgi_params;
            fastcgi_pass unix:/path/to/mi_programa/run/php/php7.4-fpm.sock;
        }

        location = /error_pages/404.html {
            root /path/to/mi_programa/www/html;
        }

        location = /error_pages/50x.html {
            root /path/to/mi_programa/www/html;
        }

		# Carpeta para uploads
        location /uploads/ {
            client_body_temp_path /path/to/mi_programa/uploads/temp;
            root /path/to/mi_programa/uploads;
        }
    }

    server {
        listen 8080;
        listen [::]:8080;

        server_name example.com;

        root /path/to/mi_programa/www/html/example.com;
        index index.html index.php index.htm;

        location / {
            try_files $uri $uri/ =404;
        }

        location = /error_pages/404.html {
            root /path/to/mi_programa/www/html;
        }

        location = /error_pages/50x.html {
            root /path/to/mi_programa/www/html;
		}
		
        # Carpeta para uploads
        location /uploads/ {
            client_body_temp_path /path/to/mi_programa/uploads/example.com/temp;
            root /path/to/mi_programa/uploads/example.com;
        }
        
        # Nueva ubicación para /otro
        location /otro {
            root /path/to/mi_programa/www/html/otro;
            index otro_index.html;
        }
    }
}

# - **Error 404**: Si la carpeta no existe, Nginx devolverá un error 404 (Not Found).
# - **Error 500**: En casos más graves, podría devolver un error 500 (Internal Server Error).
# - **Manejo de Errores**: Configura páginas de error personalizadas para mejorar la experiencia del usuario.

### Explicación de las Configuraciones

# - **Logs**: `access_log` y `error_log` especifican los archivos de log para accesos y errores.
# - **Compresión**: `gzip` y `gzip_types` habilitan la compresión y especifican los tipos de contenido a comprimir.
# - **Tiempo de espera**: Configuraciones como `client_max_body_size`, `client_body_timeout`, `client_header_timeout`, `keepalive_timeout`, y `send_timeout` controlan varios tiempos de espera y tamaños máximos.
# - **Caché**: `proxy_cache_path` configura la ruta y los parámetros para la caché de proxy.
# - **MIME types**: `include /etc/nginx/mime.types` y `default_type` configuran los tipos MIME.
# - **Conexiones**: `keepalive_requests`, `tcp_nodelay`, y `tcp_nopush` optimizan las conexiones.
# - **Seguridad**: `server_tokens off` oculta la versión de Nginx en las respuestas.
# - **Límites de conexiones**: `limit_conn_zone` y `limit_conn` configuran límites en el número de conexiones.

# Estas configuraciones globales ayudan a optimizar y asegurar tu servidor Nginx, aplicándose a todos los bloques `server` definidos dentro del bloque `http`.

# mi_programa/
# ├── conf/
# │   ├── nginx.conf
# │   ├── mime.types
# │   └── fastcgi_params
# ├── www/
# │   ├── html/
# │   │   ├── index.html
# │   │   └── error_pages/
# │   │       ├── 404.html
# │   │       └── 50x.html
# │   └── cgi-bin/
# │       └── script.cgi
# ├── logs/
# │   ├── access.log
# │   └── error.log
# └── run/
#     └── php/
#         └── php7.4-fpm.sock